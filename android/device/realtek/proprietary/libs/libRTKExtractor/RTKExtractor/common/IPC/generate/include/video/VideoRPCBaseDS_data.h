/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _VIDEORPCBASEDS_DATA_H_RPCGEN
#define _VIDEORPCBASEDS_DATA_H_RPCGEN

#include <rpc_common.h>

struct RPC_RINGBUFFER {
	long instanceID;
	long pinID;
	long readPtrIndex;
	long pRINGBUFF_HEADER;
};
typedef struct RPC_RINGBUFFER RPC_RINGBUFFER;

enum VIDEO_VF_TYPE {
	VF_TYPE_VIDEO_MPEG2_DECODER = 0,
	VF_TYPE_VIDEO_MPEG4_DECODER = 1,
	VF_TYPE_VIDEO_DIVX_DECODER = 2,
	VF_TYPE_VIDEO_H263_DECODER = 3,
	VF_TYPE_VIDEO_H264_DECODER = 4,
	VF_TYPE_VIDEO_VC1_DECODER = 5,
	VF_TYPE_VIDEO_REAL_DECODER = 6,
	VF_TYPE_VIDEO_JPEG_DECODER = 7,
	VF_TYPE_VIDEO_MJPEG_DECODER = 8,
	VF_TYPE_SPU_DECODER = 9,
	VF_TYPE_VIDEO_OUT = 10,
	VF_TYPE_TRANSITION = 11,
	VF_TYPE_THUMBNAIL = 12,
	VF_TYPE_VIDEO_VP6_DECODER = 13,
	VF_TYPE_VIDEO_IMAGE_DECODER = 14,
	VF_TYPE_FLASH = 15,
	VF_TYPE_VIDEO_AVS_DECODER = 16,
	VF_TYPE_MIXER = 17,
	VF_TYPE_VIDEO_VP8_DECODER = 18,
	VF_TYPE_VIDEO_WMV7_DECODER = 19,
	VF_TYPE_VIDEO_WMV8_DECODER = 20,
	VF_TYPE_VIDEO_RAW_DECODER = 21,
	VF_TYPE_VIDEO_THEORA_DECODER = 22,
	VF_TYPE_VIDEO_FJPEG_DECODER = 23,
};
typedef enum VIDEO_VF_TYPE VIDEO_VF_TYPE;

enum VIDEO_LOW_DELAY {
	LOW_DELAY_OFF = 0,
	LOW_DELAY_DECODER = 1,
	LOW_DELAY_DISPLAY = 2,
	LOW_DELAY_DECODER_DISPLAY = 3,
};
typedef enum VIDEO_LOW_DELAY VIDEO_LOW_DELAY;

enum VIDEO_IMG_TYPE {
	IMG_JPEG = 0,
	IMG_PNG = 1,
	IMG_BMP = 2,
	IMG_GIF = 3,
	IMG_TIFF = 4,
};
typedef enum VIDEO_IMG_TYPE VIDEO_IMG_TYPE;

enum VIDEO_JPEG_ROTATION {
	VIDEO_ROTATE_0 = 0,
	VIDEO_ROTATE_90 = 1,
	VIDEO_ROTATE_180 = 2,
	VIDEO_ROTATE_270 = 3,
};
typedef enum VIDEO_JPEG_ROTATION VIDEO_JPEG_ROTATION;

enum VIDEO_ASSISTANT_TYPE {
	VIDEO_ASSISTANT_VP8 = 0x100,
	VIDEO_ASSISTANT_THEORA = 0x200,
};
typedef enum VIDEO_ASSISTANT_TYPE VIDEO_ASSISTANT_TYPE;

enum VIDEO_ASSISTANT_ACTION {
	VIDEO_ASSISTANT_CREATE = 0x100,
	VIDEO_ASSISTANT_DESTROY = 0x500,
};
typedef enum VIDEO_ASSISTANT_ACTION VIDEO_ASSISTANT_ACTION;

enum VIDEO_JPEG_MIRROR {
	VIDEO_MIRROR_NONE = 0,
	VIDEO_MIRROR_X = 1,
	VIDEO_MIRROR_Y = 2,
	VIDEO_MIRROR_XY = 3,
};
typedef enum VIDEO_JPEG_MIRROR VIDEO_JPEG_MIRROR;

enum IMG_TARGET_FORMAT {
	IMG_YUV = 0,
	IMG_ARGB8888 = 1,
	IMG_RGB565 = 2,
	IMG_RGB332 = 3,
	IMG_HANDLE = 4,
	IMG_RGBA8888 = 5,
	IMG_RGBA8888_LE = 6,
	IMG_ARGB8888_LE = 7,
	IMG_RGB565_LE = 8,
};
typedef enum IMG_TARGET_FORMAT IMG_TARGET_FORMAT;

enum IMG_TARGET_POSITION {
	IMG_TARGET_LEFTTOP = 0,
	IMG_TARGET_CENTER = 1,
	IMG_TARGET_FILL = 2,
};
typedef enum IMG_TARGET_POSITION IMG_TARGET_POSITION;

enum IMG_SOURCE_PICTURE_SELECT {
	IMG_PICTURE_OPTIONAL = 0,
	IMG_PICTURE_WHOLE = 1,
	IMG_PICTURE_THUMBNAIL = 2,
	IMG_PICTURE_THUMBNAIL_FIRST = 3,
};
typedef enum IMG_SOURCE_PICTURE_SELECT IMG_SOURCE_PICTURE_SELECT;

enum IMG_STATUS {
	IMG_STATUS_INIT = 0,
	IMG_STATUS_FINISH = 1,
	IMG_STATUS_FAIL_DECODE = 2,
	IMG_STATUS_UNSUPPORT = 3,
	IMG_STATUS_TIFF_FOR_BATCH = 4,
	IMG_STATUS_ANIMATION_GIF = 5,
	IMG_STATUS_UNSUPPORT_SIZE = 6,
};
typedef enum IMG_STATUS IMG_STATUS;

enum VIDEO_COLOR_FMT {
	VIDEO_COLOR_YUV = 0,
	VIDEO_COLOR_ARGB8888 = 1,
	VIDEO_COLOR_RGB565 = 2,
	VIDEO_COLOR_RGB332 = 3,
	VIDEO_COLOR_RGBA8888 = 4,
	VIDEO_COLOR_HANDLE = 5,
};
typedef enum VIDEO_COLOR_FMT VIDEO_COLOR_FMT;

enum VIDEO_TRANSITION_TYPE {
	VIDEO_TRANSITION_COPY = 0,
	VIDEO_TRANSITION_CROSSFADE = 1,
	VIDEO_TRANSITION_LEFT_TO_RIGHT = 2,
	VIDEO_TRANSITION_TOP_TO_BOTTOM = 3,
	VIDEO_TRANSITION_WATERFALL = 4,
	VIDEO_TRANSITION_SNAKE = 5,
	VIDEO_TRANSITION_RANDOM_BOX = 6,
	VIDEO_TRANSITION_DIAGONAL = 7,
	VIDEO_TRANSITION_FADEIN_FADEOUT = 8,
	VIDEO_TRANSITION_MOVE = 9,
	VIDEO_TRANSITION_CROSSFADE_KENBURNS = 10,
	VIDEO_TRANSITION_WINDOW = 11,
	VIDEO_TRANSITION_EXTEND = 12,
	VIDEO_TRANSITION_EXPAND = 13,
	VIDEO_TRANSITION_STEP_ALPHA = 14,
	VIDEO_TRANSITION_UNKNOWN = 15,
};
typedef enum VIDEO_TRANSITION_TYPE VIDEO_TRANSITION_TYPE;

enum VIDEO_FORMAT {
	VIDEO_FORMAT_NTSC = 0,
	VIDEO_FORMAT_PAL = 1,
	VIDEO_FORMAT_NTSC_443 = 2,
	VIDEO_FORMAT_PAL_M = 3,
	VIDEO_FORMAT_PAL_CN = 4,
	VIDEO_FORMAT_SECAM = 5,
	VIDEO_FORMAT_480P = 6,
	VIDEO_FORMAT_576P = 7,
	VIDEO_FORMAT_720P50 = 8,
	VIDEO_FORMAT_720P60 = 9,
	VIDEO_FORMAT_720P25 = 10,
	VIDEO_FORMAT_720P30 = 11,
	VIDEO_FORMAT_720I50 = 12,
	VIDEO_FORMAT_720I60 = 13,
	VIDEO_FORMAT_1080I50 = 14,
	VIDEO_FORMAT_1080I60 = 15,
	VIDEO_FORMAT_1080P50 = 16,
	VIDEO_FORMAT_1080P60 = 17,
};
typedef enum VIDEO_FORMAT VIDEO_FORMAT;

enum VIDEO_STREAM_TYPE {
	VIDEO_STREAM_MPEG1 = 0,
	VIDEO_STREAM_MPEG2 = 1,
	VIDEO_STREAM_MPEG4 = 2,
	VIDEO_STREAM_DIVX3 = 3,
	VIDEO_STREAM_H263 = 4,
	VIDEO_STREAM_H264 = 5,
	VIDEO_STREAM_VC1 = 6,
	VIDEO_STREAM_REALVIDEO = 7,
	VIDEO_STREAM_MJPEG = 8,
	VIDEO_STREAM_VP6 = 9,
	VIDEO_STREAM_AVS = 10,
	VIDEO_STREAM_YUV = 11,
	VIDEO_STREAM_VP8 = 12,
	VIDEO_STREAM_WMV7 = 13,
	VIDEO_STREAM_WMV8 = 14,
	VIDEO_STREAM_RAW = 15,
	VIDEO_STREAM_THEORA = 16,
	VIDEO_STREAM_UNKNOWN = 17,
	VIDEO_STREAM_FJPEG = 18,
};
typedef enum VIDEO_STREAM_TYPE VIDEO_STREAM_TYPE;

enum VIDEO_DECODER_CC_BYPASS_MODE {
	VIDEODECODER_CC_DROP = 0,
	VIDEODECODER_CC_BYPASS = 1,
	VIDEODECODER_CC_DECODE = 2,
};
typedef enum VIDEO_DECODER_CC_BYPASS_MODE VIDEO_DECODER_CC_BYPASS_MODE;

enum VO_STANDARD {
	VO_STANDARD_NTSC_M = 0,
	VO_STANDARD_NTSC_J = 1,
	VO_STANDARD_NTSC_443 = 2,
	VO_STANDARD_PAL_B = 3,
	VO_STANDARD_PAL_D = 4,
	VO_STANDARD_PAL_G = 5,
	VO_STANDARD_PAL_H = 6,
	VO_STANDARD_PAL_I = 7,
	VO_STANDARD_PAL_N = 8,
	VO_STANDARD_PAL_NC = 9,
	VO_STANDARD_PAL_M = 10,
	VO_STANDARD_PAL_60 = 11,
	VO_STANDARD_SECAM = 12,
	VO_STANDARD_HDTV_720P_60 = 13,
	VO_STANDARD_HDTV_720P_50 = 14,
	VO_STANDARD_HDTV_720P_30 = 15,
	VO_STANDARD_HDTV_720P_25 = 16,
	VO_STANDARD_HDTV_720P_24 = 17,
	VO_STANDARD_HDTV_1080I_60 = 18,
	VO_STANDARD_HDTV_1080I_50 = 19,
	VO_STANDARD_HDTV_1080P_30 = 20,
	VO_STANDARD_HDTV_1080P_25 = 21,
	VO_STANDARD_HDTV_1080P_24 = 22,
	VO_STANDARD_VGA = 23,
	VO_STANDARD_SVGA = 24,
	VO_STANDARD_HDTV_1080P_60 = 25,
	VO_STANDARD_HDTV_1080P_50 = 26,
	VO_STANDARD_HDTV_1080I_59 = 27,
	VO_STANDARD_HDTV_720P_59 = 28,
	VO_STANDARD_HDTV_1080P_23 = 29,
	VO_STANDARD_HDTV_1080P_59 = 30,
	VO_STANDARD_HDTV_1080P_60_3D = 31,
	VO_STANDARD_HDTV_1080P_50_3D = 32,
	VO_STANDARD_HDTV_1080P_30_3D = 33,
	VO_STANDARD_HDTV_1080P_24_3D = 34,
	VO_STANDARD_HDTV_720P_60_3D = 35,
	VO_STANDARD_HDTV_720P_50_3D = 36,
	VO_STANDARD_HDTV_720P_30_3D = 37,
	VO_STANDARD_HDTV_720P_24_3D = 38,
	VO_STANDARD_HDTV_720P_59_3D = 39,
	VO_STANDARD_HDTV_1080I_60_3D = 40,
	VO_STANDARD_HDTV_1080I_59_3D = 41,
	VO_STANDARD_HDTV_1080I_50_3D = 42,
	VO_STANDARD_HDTV_1080P_23_3D = 43,
};
typedef enum VO_STANDARD VO_STANDARD;

enum VO_PEDESTAL_TYPE {
	VO_PEDESTAL_TYPE_300_700_ON = 0,
	VO_PEDESTAL_TYPE_300_700_OFF = 1,
	VO_PEDESTAL_TYPE_286_714_ON = 2,
	VO_PEDESTAL_TYPE_286_714_OFF = 3,
};
typedef enum VO_PEDESTAL_TYPE VO_PEDESTAL_TYPE;

enum VO_TV_TYPE {
	VO_TV_TYPE_4_BY_3 = 0,
	VO_TV_TYPE_16_BY_9_FIXED = 1,
	VO_TV_TYPE_16_BY_9_AUTO = 2,
	VO_TV_TYPE_16_BY_10 = 3,
};
typedef enum VO_TV_TYPE VO_TV_TYPE;

enum VO_HDMI_MODE {
	VO_DVI_ON = 0,
	VO_HDMI_ON = 1,
	VO_HDMI_OFF = 2,
};
typedef enum VO_HDMI_MODE VO_HDMI_MODE;

enum VO_HDMI_AUDIO_SAMPLE_FREQ {
	VO_HDMI_AUDIO_NULL = 0,
	VO_HDMI_AUDIO_32K = 1,
	VO_HDMI_AUDIO_44_1K = 2,
	VO_HDMI_AUDIO_48K = 3,
	VO_HDMI_AUDIO_88_2K = 4,
	VO_HDMI_AUDIO_96K = 5,
	VO_HDMI_AUDIO_176_4K = 6,
	VO_HDMI_AUDIO_192K = 7,
};
typedef enum VO_HDMI_AUDIO_SAMPLE_FREQ VO_HDMI_AUDIO_SAMPLE_FREQ;

enum VO_HDMI_COLOR_FMT {
	VO_HDMI_RGB444 = 0,
	VO_HDMI_YCbCr422 = 1,
	VO_HDMI_YCbCr444 = 2,
};
typedef enum VO_HDMI_COLOR_FMT VO_HDMI_COLOR_FMT;

enum VO_INTERFACE_TYPE {
	VO_ANALOG_AND_DIGITAL = 0,
	VO_ANALOG_ONLY = 1,
	VO_DIGITAL_ONLY = 2,
};
typedef enum VO_INTERFACE_TYPE VO_INTERFACE_TYPE;

enum VO_3D_SOURCE_FORMAT {
	VO_SIDE_BY_SIDE = 0,
	VO_TOP_BOTTOM = 1,
};
typedef enum VO_3D_SOURCE_FORMAT VO_3D_SOURCE_FORMAT;

enum VO_VBI_ASPECT_RATIO {
	VO_VBI_ASPECT_RATIO_RESEVED_0 = 0,
	VO_VBI_ASPECT_RATIO_14_BY_9_LB_CENTER = 0 + 1,
	VO_VBI_ASPECT_RATIO_14_BY_9_LB_TOP = 0 + 2,
	VO_VBI_ASPECT_RATIO_RESEVED_3 = 0 + 3,
	VO_VBI_ASPECT_RATIO_16_BY_9_LB_TOP = 0 + 4,
	VO_VBI_ASPECT_RATIO_RESEVED_5 = 0 + 5,
	VO_VBI_ASPECT_RATIO_RESEVED_6 = 0 + 6,
	VO_VBI_ASPECT_RATIO_16_BY_9 = 0 + 7,
	VO_VBI_ASPECT_RATIO_4_BY_3 = 0 + 8,
	VO_VBI_ASPECT_RATIO_RESEVED_9 = 0 + 9,
	VO_VBI_ASPECT_RATIO_RESEVED_10 = 0 + 10,
	VO_VBI_ASPECT_RATIO_16_BY_9_LB_CENTER = 0 + 11,
	VO_VBI_ASPECT_RATIO_RESEVED_12 = 0 + 12,
	VO_VBI_ASPECT_RATIO_LT_16_BY_9_LB_CENTER = 0 + 13,
	VO_VBI_ASPECT_RATIO_14_BY_9 = 0 + 14,
};
typedef enum VO_VBI_ASPECT_RATIO VO_VBI_ASPECT_RATIO;

enum VO_VBI_COPY_MODE {
	VO_VBI_COPY_MODE_COPY_FREE = 0,
	VO_VBI_COPY_MODE_RESERVE = 0 + 1,
	VO_VBI_COPY_MODE_COPY_ONCE = 0 + 2,
	VO_VBI_COPY_MODE_COPY_NONE = 0 + 3,
};
typedef enum VO_VBI_COPY_MODE VO_VBI_COPY_MODE;

enum VO_VBI_APS {
	VO_VBI_APS_OFF = 0,
	VO_VBI_APS_TYPE_1 = 0 + 1,
	VO_VBI_APS_TYPE_2 = 0 + 2,
	VO_VBI_APS_TYPE_3 = 0 + 3,
};
typedef enum VO_VBI_APS VO_VBI_APS;

enum VO_VBI_SUBTITLE_MODE {
	VO_VBI_SUBTITLE_MODE_NONE = 0,
	VO_VBI_SUBTITLE_MODE_INSIDE = 0 + 1,
	VO_VBI_SUBTITLE_MODE_OUTSIDE = 0 + 2,
	VO_VBI_SUBTITLE_MODE_RESERVED = 0 + 3,
};
typedef enum VO_VBI_SUBTITLE_MODE VO_VBI_SUBTITLE_MODE;

enum VO_VIDEO_PLANE {
	VO_VIDEO_PLANE_V1 = 0,
	VO_VIDEO_PLANE_V2 = 1,
	VO_VIDEO_PLANE_SUB1 = 2,
	VO_VIDEO_PLANE_OSD1 = 3,
	VO_VIDEO_PLANE_OSD2 = 4,
	VO_VIDEO_PLANE_WIN1 = 5,
	VO_VIDEO_PLANE_WIN2 = 6,
	VO_VIDEO_PLANE_WIN3 = 7,
	VO_VIDEO_PLANE_WIN4 = 8,
	VO_VIDEO_PLANE_WIN5 = 9,
	VO_VIDEO_PLANE_NONE = 255,
};
typedef enum VO_VIDEO_PLANE VO_VIDEO_PLANE;

enum VO_RESCALE_MODE {
	VO_RESCALE_MODE_KEEP_AR_AUTO = 0,
	VO_RESCALE_MODE_KEEP_AR_LB_CNTR = 1,
	VO_RESCALE_MODE_KEEP_AR_LB_TOP = 2,
	VO_RESCALE_MODE_KEEP_AR_PS_CNTR = 3,
	VO_RESCALE_MODE_KEEP_AR_PS_AUTO = 4,
	VO_RESCALE_MODE_FULL_SCALE = 5,
	VO_RESCALE_MODE_USER_DEFINE = 6,
};
typedef enum VO_RESCALE_MODE VO_RESCALE_MODE;

enum VO_DEINT_MODE {
	VO_DEINT_MODE_BOB = 0,
	VO_DEINT_MODE_WEAVE = 1,
	VO_DEINT_MODE_MADI = 2,
	VO_DEINT_MODE_MADI_SNGLDIR = 3,
	VO_DEINT_MODE_MCOMP = 4,
	VO_DEINT_MODE_FILM = 5,
	VO_DEINT_MODE_AUTO = 6,
};
typedef enum VO_DEINT_MODE VO_DEINT_MODE;

enum VO_OSD_LPF_TYPE {
	VO_OSD_LPF_TYPE_DROP = 0,
	VO_OSD_LPF_TYPE_FILTER = 1,
	VO_OSD_LPF_TYPE_AVERAGE = 2,
};
typedef enum VO_OSD_LPF_TYPE VO_OSD_LPF_TYPE;

enum VO_OSD_COLOR_FORMAT {
	VO_OSD_COLOR_FORMAT_2BIT = 0,
	VO_OSD_COLOR_FORMAT_4BIT = 1,
	VO_OSD_COLOR_FORMAT_8BIT = 2,
	VO_OSD_COLOR_FORMAT_RGB332 = 3,
	VO_OSD_COLOR_FORMAT_RGB565 = 4,
	VO_OSD_COLOR_FORMAT_ARGB1555 = 5,
	VO_OSD_COLOR_FORMAT_ARGB4444 = 6,
	VO_OSD_COLOR_FORMAT_ARGB8888 = 7,
	VO_OSD_COLOR_FORMAT_Reserved0 = 8,
	VO_OSD_COLOR_FORMAT_Reserved1 = 9,
	VO_OSD_COLOR_FORMAT_Reserved2 = 10,
	VO_OSD_COLOR_FORMAT_YCBCRA4444 = 11,
	VO_OSD_COLOR_FORMAT_YCBCRA8888 = 12,
	VO_OSD_COLOR_FORMAT_RGBA5551 = 13,
	VO_OSD_COLOR_FORMAT_RGBA4444 = 14,
	VO_OSD_COLOR_FORMAT_RGBA8888 = 15,
	VO_OSD_COLOR_FORMAT_420 = 16,
	VO_OSD_COLOR_FORMAT_422 = 17,
	VO_OSD_COLOR_FORMAT_RGB323 = 18,
	VO_OSD_COLOR_FORMAT_RGB233 = 19,
	VO_OSD_COLOR_FORMAT_RGB556 = 20,
	VO_OSD_COLOR_FORMAT_RGB655 = 21,
	VO_OSD_COLOR_FORMAT_RGB888 = 22,
	VO_OSD_COLOR_FORMAT_RGB565_LITTLE = 36,
	VO_OSD_COLOR_FORMAT_ARGB1555_LITTLE = 37,
	VO_OSD_COLOR_FORMAT_ARGB4444_LITTLE = 38,
	VO_OSD_COLOR_FORMAT_ARGB8888_LITTLE = 39,
	VO_OSD_COLOR_FORMAT_YCBCRA4444_LITTLE = 43,
	VO_OSD_COLOR_FORMAT_YCBCRA8888_LITTLE = 44,
	VO_OSD_COLOR_FORMAT_RGBA5551_LITTLE = 45,
	VO_OSD_COLOR_FORMAT_RGBA4444_LITTLE = 46,
	VO_OSD_COLOR_FORMAT_RGBA8888_LITTLE = 47,
	VO_OSD_COLOR_FORMAT_RGB556_LITTLE = 52,
	VO_OSD_COLOR_FORMAT_RGB655_LITTLE = 53,
	VO_OSD_COLOR_FORMAT_RGB888_LITTLE = 54,
};
typedef enum VO_OSD_COLOR_FORMAT VO_OSD_COLOR_FORMAT;

enum VO_OSD_RGB_ORDER {
	VO_OSD_COLOR_RGB = 0,
	VO_OSD_COLOR_BGR = 1,
	VO_OSD_COLOR_GRB = 2,
	VO_OSD_COLOR_GBR = 3,
	VO_OSD_COLOR_RBG = 4,
	VO_OSD_COLOR_BRG = 5,
};
typedef enum VO_OSD_RGB_ORDER VO_OSD_RGB_ORDER;

enum VO_GRAPHIC_PLANE {
	VO_GRAPHIC_OSD = 0,
	VO_GRAPHIC_SUB1 = 1,
	VO_GRAPHIC_SUB2 = 2,
	VO_GRAPHIC_OSD1 = 0,
	VO_GRAPHIC_OSD2 = 2,
};
typedef enum VO_GRAPHIC_PLANE VO_GRAPHIC_PLANE;

enum VO_GRAPHIC_STORAGE_MODE {
	VO_GRAPHIC_BLOCK = 0,
	VO_GRAPHIC_SEQUENTIAL = 1,
};
typedef enum VO_GRAPHIC_STORAGE_MODE VO_GRAPHIC_STORAGE_MODE;

struct VO_COLOR {
	u_char c1;
	u_char c2;
	u_char c3;
	u_char isRGB;
};
typedef struct VO_COLOR VO_COLOR;

struct VO_RECTANGLE {
	short x;
	short y;
	u_short width;
	u_short height;
};
typedef struct VO_RECTANGLE VO_RECTANGLE;

struct VO_SUBPIC_COLORMAP {
	u_char alpha3;
	u_char alpha2;
	u_char alpha1;
	u_char alpha0;
	u_char color3;
	u_char color2;
	u_char color1;
	u_char color0;
};
typedef struct VO_SUBPIC_COLORMAP VO_SUBPIC_COLORMAP;

enum VO_ZOOM_TYPE {
	VO_ZOOM_FULL_SIZE = 0,
	VO_ZOOM_ORIGINAL_SIZE = 1,
	VO_ZOOM_DOUBLE_SIZE = 2,
};
typedef enum VO_ZOOM_TYPE VO_ZOOM_TYPE;

enum SP_STREAM_TYPE {
	SP_DVD_TYPE = 0,
	SP_DIVX_TYPE = 1,
	SP_DIVX_MENU_TYPE = 2,
	SP_DVB_SUBTITLE_TYPE = 3,
	SP_DVB_TT_TYPE = 4,
	SP_ATSC_CC_TYPE = 5,
	SP_SRT_TYPE = 6,
	SP_SSA_TYPE = 7,
	SP_DIVX_XSUB_PLUS_TYPE = 8,
	SP_DVD_FOR_DIVX_TYPE = 9,
	SP_BD_SUBTITLE_TYPE = 10,
};
typedef enum SP_STREAM_TYPE SP_STREAM_TYPE;

enum TVE_BOARD_TYPE {
	TVE_BOARD_CLASSIC_TYPE = 0,
	TVE_BOARD_EXTERNAL_SCART_TYPE = 1,
	TVE_BOARD_AVHDD_TYPE = 2,
	TVE_BOARD_CUSTOM_1_TYPE = 3,
	TVE_BOARD_CUSTOM_2_TYPE = 4,
	TVE_BOARD_CUSTOM_3_TYPE = 5,
	TVE_BOARD_CUSTOM_4_TYPE = 6,
	TVE_BOARD_CUSTOM_5_TYPE = 7,
	TVE_BOARD_CUSTOM_6_TYPE = 8,
	TVE_BOARD_CUSTOM_7_TYPE = 9,
	TVE_BOARD_CUSTOM_8_TYPE = 10,
	TVE_BOARD_CUSTOM_9_TYPE = 11,
};
typedef enum TVE_BOARD_TYPE TVE_BOARD_TYPE;

enum VIDEO_BUFFER_TYPE {
	VIDEO_BUFFER_SD = 0,
	VIDEO_BUFFER_HD = 1,
	VIDEO_BUFFER_HD_DIVX = 2,
	VIDEO_BUFFER_RM_CIF = 3,
	VIDEO_BUFFER_USER_DEFINE = 4,
};
typedef enum VIDEO_BUFFER_TYPE VIDEO_BUFFER_TYPE;

enum VIDEO_DNR_MODE {
	VIDEO_DNR_OFF = 0,
	VIDEO_DNR_AUTO = 1,
	VIDEO_DNR_DEMO = 2,
};
typedef enum VIDEO_DNR_MODE VIDEO_DNR_MODE;

enum VIDEO_CODEC_CONTROL_BIT {
	VIDEO_MPEG2_DECODER_BIT = 43,
	VIDEO_MPEG4_DECODER_BIT = 44,
	VIDEO_DIVX_DECODER_BIT = 45,
	VIDEO_REALVIDEO_DECODER_BIT = 46,
	VIDEO_H263_DECODER_BIT = 47,
	VIDEO_MJPEG_DECODER_BIT = 48,
	VIDEO_H264_DECODER_BIT = 49,
	VIDEO_VC1_DECODER_BIT = 50,
	VIDEO_FJPEG_DECODER_BIT = 51,
};
typedef enum VIDEO_CODEC_CONTROL_BIT VIDEO_CODEC_CONTROL_BIT;

enum VIDEO_PHOTO_DEC_JPEG_CTRL {
	JPEG_ENABLE = 0,
	JPEG_DISABLE = 1,
	JPEG_NO_PROGRESSIVE = 2,
};
typedef enum VIDEO_PHOTO_DEC_JPEG_CTRL VIDEO_PHOTO_DEC_JPEG_CTRL;

enum VIDEO_PHOTO_DEC_BITMAP_CTRL {
	BITMAP_ENABLE = 0,
	BITMAP_DISABLE = 1,
};
typedef enum VIDEO_PHOTO_DEC_BITMAP_CTRL VIDEO_PHOTO_DEC_BITMAP_CTRL;

enum VIDEO_PHOTO_DEC_TIFF_CTRL {
	TIFF_ENABLE = 0,
	TIFF_DISABLE = 1,
};
typedef enum VIDEO_PHOTO_DEC_TIFF_CTRL VIDEO_PHOTO_DEC_TIFF_CTRL;

enum VIDEO_PHOTO_DEC_GIF_CTRL {
	GIF_ENABLE = 0,
	GIF_DISABLE = 1,
	GIF_NO_ANIMATION = 2,
};
typedef enum VIDEO_PHOTO_DEC_GIF_CTRL VIDEO_PHOTO_DEC_GIF_CTRL;

enum VIDEO_PHOTO_DEC_PNG_CTRL {
	PNG_ENABLE = 0,
	PNG_DISABLE = 1,
};
typedef enum VIDEO_PHOTO_DEC_PNG_CTRL VIDEO_PHOTO_DEC_PNG_CTRL;

struct MIXER_WIN {
	u_char winID;
	short order;
	short alpha;
	struct VO_RECTANGLE dispWin;
	struct VO_RECTANGLE clipSrcWin;
};
typedef struct MIXER_WIN MIXER_WIN;

enum YUV_FMT {
	FMT_YUYV = 0,
	FMT_YUV420 = 1,
	FMT_YUV422P = 2,
};
typedef enum YUV_FMT YUV_FMT;

struct PLANE_MIXER_WIN {
	enum VO_VIDEO_PLANE winID;
	short opacity;
	short alpha;
};
typedef struct PLANE_MIXER_WIN PLANE_MIXER_WIN;

enum ENUM_SEI_3D_TYPE {
	SEI_3D_NON = 0,
	SEI_3D_SBS = 2,
	SEI_3D_TB = 4,
	SEI_3D_SBS_SWITCH = 10,
	SEI_3D_TB_SWITCH = 12,
};
typedef enum ENUM_SEI_3D_TYPE ENUM_SEI_3D_TYPE;

enum ENUM_VIDEO_DEC_PRIVATEINFO {
	ENUM_VIDEO_PRIVATEINFO_SEI_INFO = 0,
	ENUM_VIDEO_PRIVATEINFO_DEC_IGNORE_BS_ASPECT_RATIO = 1,
};
typedef enum ENUM_VIDEO_DEC_PRIVATEINFO ENUM_VIDEO_DEC_PRIVATEINFO;

enum ENUM_VIDEO_VO_PRIVATEINFO {
	ENUM_VIDEO_PRIVATEINFO_ENTER_OSD1_FULLWIN_IN_3D_MODE = 0,
	ENUM_VIDEO_PRIVATEINFO_EXIT_OSD1_FULLWIN_IN_3D_MODE = 1,
	ENUM_VIDEO_PRIVATEINFO_FORCE_NOT_CLOSE_ANALOG_OUT = 2,
};
typedef enum ENUM_VIDEO_VO_PRIVATEINFO ENUM_VIDEO_VO_PRIVATEINFO;

struct VIDEO_RPC_DEC_PRIVATEINFO_INPUT_PARAMETERS {
	long instanceID;
	enum ENUM_VIDEO_DEC_PRIVATEINFO type;
	long data[16];
};
typedef struct VIDEO_RPC_DEC_PRIVATEINFO_INPUT_PARAMETERS VIDEO_RPC_DEC_PRIVATEINFO_INPUT_PARAMETERS;

struct VIDEO_RPC_DEC_PRIVATEINFO_OUTPUT_PARAMETERS {
	long data[16];
};
typedef struct VIDEO_RPC_DEC_PRIVATEINFO_OUTPUT_PARAMETERS VIDEO_RPC_DEC_PRIVATEINFO_OUTPUT_PARAMETERS;

struct VIDEO_RPC_DEC_PRIVATEINFO_SEI_INFO {
	long sei_3d_type;
};
typedef struct VIDEO_RPC_DEC_PRIVATEINFO_SEI_INFO VIDEO_RPC_DEC_PRIVATEINFO_SEI_INFO;

struct VIDEO_RPC_VO_PRIVATEINFO_INPUT_PARAMETERS {
	enum ENUM_VIDEO_VO_PRIVATEINFO type;
	long data[16];
};
typedef struct VIDEO_RPC_VO_PRIVATEINFO_INPUT_PARAMETERS VIDEO_RPC_VO_PRIVATEINFO_INPUT_PARAMETERS;

struct VIDEO_RPC_VO_PRIVATEINFO_OUTPUT_PARAMETERS {
	long data[16];
};
typedef struct VIDEO_RPC_VO_PRIVATEINFO_OUTPUT_PARAMETERS VIDEO_RPC_VO_PRIVATEINFO_OUTPUT_PARAMETERS;

enum VIDEO_ENUM_PRIVATEINFO {
	ENUM_PRIVATEINFO_VIDEO_CHECK_SECURITY_ID = 0,
};
typedef enum VIDEO_ENUM_PRIVATEINFO VIDEO_ENUM_PRIVATEINFO;

struct VIDEO_RPC_PRIVATEINFO_PARAMETERS {
	long instanceID;
	enum VIDEO_ENUM_PRIVATEINFO type;
	long privateInfo[16];
};
typedef struct VIDEO_RPC_PRIVATEINFO_PARAMETERS VIDEO_RPC_PRIVATEINFO_PARAMETERS;

struct VIDEO_RPC_PRIVATEINFO_RETURNVAL {
	long instanceID;
	long privateInfo[16];
};
typedef struct VIDEO_RPC_PRIVATEINFO_RETURNVAL VIDEO_RPC_PRIVATEINFO_RETURNVAL;

#endif /* !_VIDEORPCBASEDS_DATA_H_RPCGEN */
