--- a/drivers/net/wireless/realtek/rtl8192cd/8192cd_br_ext.c
+++ b/drivers/net/wireless/realtek/rtl8192cd/8192cd_br_ext.c
@@ -374,10 +374,10 @@ static int skb_pull_and_merge(struct sk_
 	int tail_len;
 	unsigned long end, tail;
 
-	if ((src+len) > skb->tail || skb->len < len)
+	if ((src+len) > skb_tail_pointer(skb) || skb->len < len)
 		return -1;
 
-	tail = (unsigned long)skb->tail;
+	tail = (unsigned long)skb_tail_pointer(skb);
 	end = (unsigned long)src+len;
 	if (tail < end)
 		return -1;
--- a/drivers/net/wireless/realtek/rtl8192cd/8192cd_mp.c
+++ b/drivers/net/wireless/realtek/rtl8192cd/8192cd_mp.c
@@ -3834,7 +3834,8 @@ congestion_handle:
 					release_wlanllchdr_to_poll(priv, txinsn.phdr);
 
 				if (background || tx_from_isr) {
-					skb->tail = skb->data = skb->head;
+					skb->data = skb->head;
+					skb_reset_tail_pointer(skb);
 					skb->len = 0;
 					priv->pshare->skb_head = (priv->pshare->skb_head + NUM_MP_SKB - 1) & (NUM_MP_SKB - 1);
 				} else if (skb) {
--- a/drivers/net/wireless/realtek/rtl8192cd/8192cd_rx.c
+++ b/drivers/net/wireless/realtek/rtl8192cd/8192cd_rx.c
@@ -3729,7 +3729,7 @@ int rx_shortcut(struct rtl8192cd_priv *p
 
             /* chop 802.11 header from skb. */
             //skb_put(pfrinfo->pskb, pfrinfo->pktlen);	// pskb->tail will be wrong
-            pfrinfo->pskb->tail = pfrinfo->pskb->data + pfrinfo->pktlen;
+            skb_set_tail_pointer(pfrinfo->pskb, pfrinfo->pktlen);
             pfrinfo->pskb->len = pfrinfo->pktlen;
 
             skb_pull(pfrinfo->pskb, offset+2);
@@ -6926,7 +6926,7 @@ rx_reuse:
 		{
             phw->rx_infoL[cur_q->cur_host_idx].pbuf = NULL;
 			pskb->data = pskb->head;
-			pskb->tail = pskb->head;
+			skb_reset_tail_pointer(pskb);
 
 			// TODO: why skb_reserve 128? 
 			// 1. priv_skb: dev_alloc_8190_skb: reserve 128 
@@ -7785,7 +7785,7 @@ void rtl8192cd_rx_isr(struct rtl8192cd_p
 			{
 				phw->rx_infoL[tail].pbuf = NULL;        // clear pointer for not being accidently freed
 				pskb->data = pskb->head;
-				pskb->tail = pskb->head;
+				skb_reset_tail_pointer(pskb);
 				skb_reserve(pskb, NET_SKB_PAD);
 #if defined(CONFIG_RTL8196_RTL8366)
 				skb_reserve(pskb, 8);
@@ -7982,7 +7982,7 @@ static struct rx_frinfo *reassemble(stru
 		if (pfirstfrinfo->pktlen >= (RX_BUF_LEN - offset - icv - mic - 200))
 #elif defined(CONFIG_USB_HCI) || defined(CONFIG_SDIO_HCI)
 		if ((pfirstframe + (pfrinfo->pktlen - offset)) >=
-			((unsigned char *)((unsigned long)(pfirstfrinfo->pskb->end))))
+			((unsigned char *)((unsigned long)(skb_end_pointer(pfirstfrinfo->pskb)))))
 #endif
 		{
 			DEBUG_ERR("RX DROP: over rx buf size after reassemble...\n");
@@ -9197,7 +9197,7 @@ static int process_datafrme(struct rtl81
 
 	pskb = get_pskb(pfrinfo);
 	//skb_put(pskb, pfrinfo->pktlen);	// pskb->tail will be wrong
-	pskb->tail = pskb->data + pfrinfo->pktlen;
+	skb_set_tail_pointer(pskb, pfrinfo->pktlen);
 	pskb->len = pfrinfo->pktlen;
 	pskb->dev = priv->dev;
 
@@ -11169,7 +11169,7 @@ static struct sk_buff *get_next_skb(stru
 		pfrinfo = list_entry(plist, struct rx_frinfo, rx_list);
 		pskb = get_pskb(pfrinfo);
 		if (pskb) {
-			pskb->tail = pskb->data + pfrinfo->pktlen;
+			skb_set_tail_pointer(pskb, pfrinfo->pktlen);
 			pskb->len = pfrinfo->pktlen;
 			pskb->dev = priv->dev;
 			if (remove)
@@ -11407,7 +11407,7 @@ void process_amsdu(struct rtl8192cd_priv
                 subfr_len = (*(next_head + MACADDRLEN*2) << 8) + (*(next_head + MACADDRLEN*2 + 1));
 
             pnewskb->len = WLAN_ETHHDR_LEN + subfr_len;
-            pnewskb->tail = pnewskb->data + pnewskb->len;
+            skb_set_tail_pointer(pnewskb, pnewskb->len);
 #ifdef ENABLE_RTL_SKB_STATS
             rtl_atomic_inc(&priv->rtl_rx_skb_cnt);
 #endif
--- a/drivers/net/wireless/realtek/rtl8192cd/8192cd_tx.c
+++ b/drivers/net/wireless/realtek/rtl8192cd/8192cd_tx.c
@@ -14077,7 +14077,7 @@ rtl88XX_tx_recycle(
                 
 				struct sk_buff *skb = (struct sk_buff *)(pdescinfo->pframe);
 				skb->data = skb->head;
-				skb->tail = skb->data;
+				skb_reset_tail_pointer(skb);
 				skb->len = 0;
 				priv->pshare->skb_tail = (priv->pshare->skb_tail + 1) & (NUM_MP_SKB - 1);
 			}
@@ -14163,7 +14163,7 @@ rtl88XX_tx_recycle(
 				if (OPMODE & WIFI_MP_CTX_BACKGROUND) {
 					struct sk_buff *skb = (struct sk_buff *)(pdescinfo->buf_pframe[cnt]);
 					skb->data = skb->head;
-					skb->tail = skb->data;
+					skb_reset_tail_pointer(skb);
 					skb->len = 0;
 					priv->pshare->skb_tail = (priv->pshare->skb_tail + 1) & (NUM_MP_SKB - 1);
 				}
@@ -14249,7 +14249,7 @@ rtl88XX_tx_recycle(
 					if (OPMODE & WIFI_MP_CTX_BACKGROUND) {
 						struct sk_buff *skb = (struct sk_buff *)(pdescinfo->buf_pframe[cnt]);
 						skb->data = skb->head;
-						skb->tail = skb->data;
+						skb_reset_tail_pointer(skb);
 						skb->len = 0;
 						priv->pshare->skb_tail = (priv->pshare->skb_tail + 1) & (NUM_MP_SKB - 1);
 					}
@@ -14412,7 +14412,7 @@ static int rtl8192cd_tx_recycle(struct r
 			if (OPMODE & WIFI_MP_CTX_BACKGROUND) {
 				struct sk_buff *skb = (struct sk_buff *)(pdescinfo->pframe);
 				skb->data = skb->head;
-				skb->tail = skb->data;
+				skb_reset_tail_pointer(skb);
 				skb->len = 0;
 				priv->pshare->skb_tail = (priv->pshare->skb_tail + 1) & (NUM_MP_SKB - 1);
 			}
--- a/drivers/net/wireless/realtek/rtl8192cd/wapi_wai.c
+++ b/drivers/net/wireless/realtek/rtl8192cd/wapi_wai.c
@@ -2553,7 +2553,7 @@ static int	WapiSendActivateAuthenticatio
 	skb_put(pskb, 14);		/*	DA|SA|ETHER_TYPE|	*/
 	
 	/*	set wai header	*/
-	wai_hdr = (wapiWaiHeader *)pskb->tail;
+	wai_hdr = (wapiWaiHeader *)skb_tail_pointer(pskb);
 	wapiSetWaiHeader(wai_hdr, WAI_SUBTYPE_AUTH_ACTIVE);
 	wai_hdr->sequenceNum = htons(++wapiInfo->waiTxSeq);
 
@@ -2672,7 +2672,7 @@ static int	WapiSendAuthenticationRspPack
 	skb_put(pskb, 14);		/*	DA|SA|ETHER_TYPE|	*/
 	
 	/*	set wai header	*/
-	wai_hdr = (wapiWaiHeader *)pskb->tail;
+	wai_hdr = (wapiWaiHeader *)skb_tail_pointer(pskb);
 	wapiSetWaiHeader(wai_hdr, WAI_SUBTYPE_AUTH_RSP);
 	wai_hdr->sequenceNum = htons(++wapiInfo->waiTxSeq);
 
--- a/drivers/net/wireless/realtek/rtl8192cd/8192cd.h
+++ b/drivers/net/wireless/realtek/rtl8192cd/8192cd.h
@@ -6712,6 +6712,30 @@ typedef enum
 #endif
 #endif
 
+
+#if !defined(__KERNEL__) || LINUX_VERSION_CODE < KERNEL_VERSION(2,6,22)
+// Porting from linux kernel, for compatible with old kernel.
+static inline unsigned char *skb_tail_pointer(const struct sk_buff *skb)
+{
+	return skb->tail;
+}
+
+static inline void skb_reset_tail_pointer(struct sk_buff *skb)
+{
+	skb->tail = skb->data;
+}
+
+static inline void skb_set_tail_pointer(struct sk_buff *skb, const int offset)
+{
+	skb->tail = skb->data + offset;
+}
+
+static inline unsigned char *skb_end_pointer(const struct sk_buff *skb)
+{
+	return skb->end;
+}
+#endif
+
 #ifdef __KERNEL__
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,22)
 static inline void skb_reset_network_header(struct sk_buff *skb)
